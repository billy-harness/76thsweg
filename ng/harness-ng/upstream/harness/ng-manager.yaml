apiVersion: v1
kind: ConfigMap
metadata:
  name: ng-manager
data:
  CACHE_BACKEND: "REDIS"
  DEPLOY_MODE: KUBERNETES_ONPREM
  MANAGER_TARGET: harness-manager:9879
  MANAGER_AUTHORITY: default-authority.harness.io
  MANAGER_CLIENT_BASEURL: 'repl{{ ConfigOption "loadbalancer_url" }}/api/'
  NG_MANAGER_CLIENT_BASEURL: 'repl{{ ConfigOption "loadbalancer_url" }}/ng/api/'
  NG_MANAGER_TARGET: ng-manager:13002
  NG_MANAGER_AUTHORITY: default-authority.harness.io
  EVENTS_FRAMEWORK_REDIS_URL: 'redis://localhost:6379'
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: 'harness-redis'
  EVENTS_FRAMEWORK_REDIS_SENTINELS: 'redis://redis-sentinel-harness-announce-0.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-1.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-2.{{repl Namespace}}:26379'
  GRPC_SERVER_PORT: "9979"
  SHOULD_CONFIGURE_WITH_PMS: "true"
  PMS_GITSYNC_TARGET:  pipeline-service:14002
  PMS_GITSYNC_AUTHORITY:  default-authority.harness.io
  TEMPLATE_GITSYNC_TARGET:  template-service:16002
  TEMPLATE_GITSYNC_AUTHORITY:  default-authority.harness.io
  PMS_TARGET:  pipeline-service:12011
  PMS_AUTHORITY:  default-authority.harness.io
  MANAGER_UI_URL:  'repl{{ ConfigOption "loadbalancer_url" }}'
  NG_MANAGER_API_URL: 'repl{{ ConfigOption "loadbalancer_url" }}/ng/api/'
  NG_MANAGER_UI_URL: 'repl{{ ConfigOption "loadbalancer_url" }}/ng/#/'
  MEMORY: 'repl{{ ConfigOption "ng_manager_memory" }}m'
  LOGGING_LEVEL: 'repl{{ ConfigOption "app_log_level" }}' 
  LOCK_CONFIG_REDIS_SENTINELS: 'redis://redis-sentinel-harness-announce-0.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-1.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-2.{{repl Namespace}}:26379'
  LOCK_CONFIG_SENTINEL_MASTER_NAME: "harness-redis"
  LOCK_CONFIG_USE_SENTINEL: "true"
  LOG_STREAMING_SERVICE_BASEURL: 'repl{{ ConfigOption "loadbalancer_url" }}/log-service/'
  LOG_STREAMING_SERVICE_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  USE_REDIS_FOR_SDK_RESPONSE_EVENTS: "true"
  MOCK_ACCESS_CONTROL_SERVICE: "false"
  ACCESS_CONTROL_ENABLED: "true"
  ACCESS_CONTROL_BASE_URL: 'repl{{ ConfigOption "loadbalancer_url" }}/authz/api/'
  ENABLE_DEFAULT_RESOURCE_GROUP_CREATION: "true"
  ENABLE_DASHBOARD_TIMESCALE: "true"
  RESOURCE_GROUP_BASE_URL: 'repl{{ ConfigOption "loadbalancer_url" }}/resourcegroup/api/'
  AUDIT_ENABLED: "true"
  AUDIT_CLIENT_BASEURL: 'repl{{ ConfigOption "loadbalancer_url" }}/audit/api/'
  CURRENT_GEN_UI_URL: 'repl{{ ConfigOption "loadbalancer_url" }}/#/'
  SCM_SERVICE_URI: "scm:8091"
  WEBHOOK_BASE_URL: 'repl{{ ConfigOption "webhook_base_url" }}'

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ng-manager
stringData:
  MONGO_URI: '{{repl if ConfigOptionEquals "mode" "production_ha"}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{repl Namespace}}.svc:27017/ng-harness?replicaSet=rs0&authSource=admin{{repl else}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc/ng-harness?authSource=admin{{repl end}}' 
  PMS_MONGO_URI: '{{repl if ConfigOptionEquals "mode" "production_ha"}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{repl Namespace}}.svc:27017/pms-harness?replicaSet=rs0&authSource=admin{{repl else}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc/pms-harness?authSource=admin{{repl end}}'
  NOTIFICATION_MONGO_URI: '{{repl if ConfigOptionEquals "mode" "production_ha"}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{repl Namespace}}.svc:27017/notifications?replicaSet=rs0&authSource=admin{{repl else}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc/notifications?authSource=admin{{repl end}}'
  TIMESCALE_URI: 'jdbc:postgresql://timescaledb-single-chart.{{repl Namespace}}:5432/harness'
  TIMESCALE_PASSWORD: kXsMSRiREYXiMciUwMdj
  TIMESCALEDB_USERNAME: postgres     
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ng-manager
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: ng-manager
              servicePort: 7090
            path: /ng/api(/|$)(.*)
# repl{{ if ConfigOptionEquals "scheme" "https"}}
      host: '{{repl ConfigOption "host_name" }}'
  tls:
    - hosts:
      - '{{repl ConfigOption "host_name" }}'
      secretName: harness-cert  
# repl{{ end }}           
          
---
apiVersion: v1
kind: Service
metadata:
  name: ng-manager
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}
spec:
  ports:
  - name: http-ng-manager
    port: 7090
    protocol: TCP
    targetPort: 7090
  - name: ng-manager-grpc
    port: 9979
    protocol: TCP
    targetPort: 9979
  - name: git-sync-grpc
    port: 13002
    protocol: TCP
    targetPort: 13002     
  selector:
    app: ng-manager
  sessionAffinity: None
  type: ClusterIP    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ng-manager
  labels:
    app: ng-manager
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}
  annotations:  
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ng_manager_deployment_annotations" | nindent 4 }}    
spec:
  progressDeadlineSeconds: 800
  replicas: repl{{ ConfigOption "ng_manager_replica" }}
  selector:
    matchLabels:
      app: ng-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ng-manager
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 8 }}
      annotations:
        license-features-hash: '{{repl (sha256sum (print (LicenseFieldValue "license") (LicenseFieldValue "feature_flag") (ConfigOption "mode") (ConfigOption "loadbalancer_url") )) }}'
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ng_manager_podspec_annotations" | nindent 8 }}
    spec:
# repl{{ if ConfigOptionEquals "mode" "production_ha"}}      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:	
            - labelSelector:	
                matchLabels:	
                  app: ng-manager
              topologyKey: kubernetes.io/hostname
# repl{{ end }}                
      serviceAccountName: harness-default    
      terminationGracePeriodSeconds: 30
      containers:
      - name: ng-manager
        image: harness/ng-manager-signed:74410
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 65534
          runAsNonRoot: true        
        ports:
        - name: http-ng-manager
          containerPort: 7090
          protocol: "TCP"
        - name: ng-manager-grpc
          containerPort: 9979
          protocol: "TCP"
        - name: git-sync-grpc
          containerPort: 13002
          protocol: "TCP"          
        resources:
          limits:
            memory: 'repl{{ ConfigOption "ng_manager_pod_memory" }}Mi'
            cpu: 'repl{{ ConfigOption "ng_manager_cpu" }}'
          requests:
            memory: 'repl{{ ConfigOption "ng_manager_pod_memory" }}Mi'
            cpu: 'repl{{ ConfigOption "ng_manager_cpu" }}'
        envFrom:
        - configMapRef:
            name: ng-manager
        - secretRef:
            name: ng-manager
        readinessProbe:
          httpGet:
            path: /health
            port: 7090
          initialDelaySeconds: 180
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 20
        livenessProbe:
          httpGet:
            path: /health
            port: 7090
          initialDelaySeconds: 180
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 10
