# {{repl if (ConfigOptionEquals "enable_gitops" "1")}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitops-service
data:
  GITOPS_SERVICE_HTTP_BIND: ":7908"
  AGENT_GRPC_AUTHORITY: 'repl{{ ConfigOption "agent_grpc_authority" }}'
  AGENT_GRPC_TARGET: 'repl{{ ConfigOption "agent_grpc_target" }}'
  GITOPS_SERVICE_HTTP_ACME: "false"
  GITOPS_SERVICE_MONGODB_DB_NAME: "harness-gitops"
  GITOPS_SERVICE_MONGODB_ENABLE_REFLECTION: "true"
  REDIS_MASTER_NAME: "harness-redis"
  REDIS_ENDPOINT: 'redis://redis-sentinel-harness-announce-0.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-1.{{repl Namespace}}:26379,redis://redis-sentinel-harness-announce-2.{{repl Namespace}}:26379'
  REDIS_SSL_ENABLED: "false"
  ACCESS_CONTROL_SERVICE_BASEPATH: '/authz/api/'
  ACCESS_CONTROL_SERVICE_HOST: '{{repl ConfigOption "host_name" }}'
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitops-service
  labels:
    app: gitops-service
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}
  annotations:  
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "gitops_service_deployment_annotations" | nindent 4 }}   
spec:
  replicas: repl{{ ConfigOption "gitops_replicas" }}
  selector:
    matchLabels:
      app: gitops-service
  template:
    metadata:
      labels:
        app: gitops-service
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 8 }}
      annotations:
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "gitops_service_podspec_annotations" | nindent 8 }}
    spec:
# repl{{ if ConfigOptionEquals "mode" "production_ha"}}      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: 
            - labelSelector:  
                matchLabels:  
                  app: gitops-service
              topologyKey: kubernetes.io/hostname
# repl{{ end }}
      serviceAccountName: harness-default
      containers:
        - name: gitops-service
          image: harness/gitops-service-signed:v0.11.8
          imagePullPolicy: Always
          securityContext:
            runAsUser: 65534
            runAsNonRoot: true
          ports:
            - name: gitops-http
              containerPort: 7908
              protocol: TCP
            - name: gitops-grpc
              containerPort: 7909
              protocol: TCP
          envFrom:
          - configMapRef:
              name: gitops-service
          - secretRef:
              name: gitops-service
          livenessProbe:
            httpGet:
              path: /healthz
              port: 7908
            initialDelaySeconds: 3
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: 7908
            initialDelaySeconds: 3
            periodSeconds: 30
          resources:
            requests:
              memory: 'repl{{ ConfigOption "gitops_pod_memory" }}Mi'
              cpu: 'repl{{ ConfigOption "gitops_cpu" }}'
            limits:
              memory: 'repl{{ ConfigOption "gitops_pod_memory" }}Mi'
              cpu: 'repl{{ ConfigOption "gitops_cpu" }}'
---

apiVersion: v1
kind: Secret
metadata:
  name: gitops-service
stringData:
  GITOPS_SERVICE_MONGODB_URL: '{{repl if ConfigOptionEquals "mode" "production_ha"}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{repl Namespace}}.svc:27017/pms-harness?replicaSet=rs0&authSource=admin{{repl else}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc/harness-gitops?authSource=admin{{repl end}}'
# repl{{ if ConfigOptionEquals "enable_gitops_rbac" "1"}}
  JWT_SECRET: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
  ACL_SECRET: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
  IDENTITY_SERVICE_SECRET: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
# repl{{ end }}
---

apiVersion: v1
kind: Service
metadata:
  name: gitops-service
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    app: gitops-service
  ports:
    - name: gitops-grpc
      port: 7909
      protocol: TCP 
      targetPort: gitops-grpc
    - name: gitops-http
      port: 7908
      protocol: TCP
      targetPort: gitops-http

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: gitops-service-http
 annotations:
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
  - http:
     paths:
     - path: /gitops(/|$)(.*)
       backend:
        serviceName: gitops-service
        servicePort: gitops-http
# repl{{ if ConfigOptionEquals "scheme" "https"}}
    host: '{{repl ConfigOption "host_name" }}'
  tls:
    - hosts:
      - '{{repl ConfigOption "host_name" }}'
      secretName: harness-cert  
# repl{{ end }}     

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitops-service-grpc
  annotations:
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/server-snippet: "keepalive_timeout 3600s; grpc_read_timeout 3600s; grpc_send_timeout 3600s;client_body_timeout 3600s;"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
  - host: 'gitops-grpc-{{repl ConfigOption "host_name" }}'
    http:
     paths:
     - backend:
          serviceName: gitops-service
          servicePort: gitops-grpc
       path: /
  tls:
    - hosts:
      - 'gitops-grpc-{{repl ConfigOption "host_name" }}'
      secretName: 'repl{{ ConfigOption "grpc_cert" }}'
# {{repl end}}
