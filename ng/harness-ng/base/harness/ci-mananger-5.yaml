
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ci-manager
  labels:
    app: ci-manager
    kots.io/placeholder: 'true'
    
  annotations:  
    kots.io/placeholder: 'true'
             
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: ci-manager
  template:
    metadata:
      labels:
        app: ci-manager
        kots.io/placeholder: 'true'
                   
      annotations:
        license-features-hash: 'abc43bfad2c3c7274b66e21b998f581bf20ac8979a3705db18b8afec24d5f109'
        kots.io/placeholder: 'true'
          
    spec:
#                 
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
      containers:
      - name: ci-manager
        image: harness/ci-manager-signed:74410
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 65534
          runAsNonRoot: true
        ports:
        - name: http-ci-manager
          containerPort: 7090
          protocol: "TCP"
        - name: ci-manager-grpc
          containerPort: 9979
          protocol: "TCP"              
        resources:
          limits:
            memory: '1400Mi'
            cpu: '0.5'
          requests:
            memory: '1400Mi'
            cpu: '0.5'
        envFrom:
        - configMapRef:
            name: ci-manager
        - secretRef:
            name: ci-manager
        readinessProbe:
          httpGet:
            path: /health
            port: http-ci-manager
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 8
        livenessProbe:
          httpGet:
            path: /health
            port: http-ci-manager
          initialDelaySeconds: 40
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 20
