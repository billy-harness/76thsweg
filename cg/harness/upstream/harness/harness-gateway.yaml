apiVersion: v1
kind: ConfigMap
metadata:
  name: harness-gateway
data:
  MANAGER_URL: 'repl{{ ConfigOption "loadbalancer_url" }}'
  MANAGER_PUBLIC_URL: 'repl{{ ConfigOption "loadbalancer_url" }}'
  MEMORY: 'repl{{ ConfigOption "gateway_memory" }}'
  DEPLOY_MODE: KUBERNETES_ONPREM
  API_VERSION: 'release-gateway:182'
  LOG_SVC_GLOBAL_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  TI_SVC_GLOBAL_TOKEN: 78d16b66-4b4c-11eb-8377-acde48001122
  CACHE_TYPE: REDIS
  TOKEN_CACHE_TTL: '300'
  USE_SENTINEL: 'true'
  SENTINEL_MASTER_NAME: 'harness-redis'
  REDIS_PORT: '26379'
  REDIS_SENTINELS: 'redis-sentinel-harness-announce-0.{{repl Namespace}},redis-sentinel-harness-announce-1.{{repl Namespace}},redis-sentinel-harness-announce-2.{{repl Namespace}}'
---
apiVersion: v1
kind: Secret
metadata:
  name: harness-gateway
stringData:
  MONGO_DB_URL: '{{repl if ConfigOptionEquals "mode" "production_ha"}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.{{repl Namespace}}.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.{{repl Namespace}}.svc:27017/gateway?replicaSet=rs0&authSource=admin{{repl else}}mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{repl Namespace}}.svc/gateway?authSource=admin{{repl end}}' 
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: harness-gateway
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }} 
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: harness-gateway
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: harness-gateway
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: harness-gateway
              servicePort: 80
            path: /gateway(/|$)(.*)  
# repl{{ if ConfigOptionEquals "scheme" "https"}}
      host: '{{repl ConfigOption "host_name" }}'
  tls:
    - hosts:
      - '{{repl ConfigOption "host_name" }}'
      secretName: harness-cert  
# repl{{ end }}           
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harness-gateway
  labels:
    app: harness-gateway
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}
  annotations:  
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "gateway_deployment_annotations" | nindent 4 }}     
spec:
  replicas: repl{{ ConfigOption "gateway_replica" }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: harness-gateway
  template:
    metadata:
      labels:
        app: harness-gateway
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 8 }}
      annotations:
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "gateway_podspec_annotations" | nindent 8 }}         
    spec:
# repl{{ if ConfigOptionEquals "mode" "production_ha"}}      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:	
            - labelSelector:	
                matchLabels:	
                  app: harness-gateway
              topologyKey: kubernetes.io/hostname
# repl{{ end }}
      serviceAccountName: harness-default    
      terminationGracePeriodSeconds: 30
      containers:
      - name: harness-gateway
        image: harness/gateway-signed:100089
        imagePullPolicy: Always
        securityContext:
          runAsUser: 65534
          runAsNonRoot: true        
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: gateway-port
          initialDelaySeconds: 120
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: gateway-port
          initialDelaySeconds: 180
          periodSeconds: 20
          failureThreshold: 2
        ports:
        - name: gateway-port
          containerPort: 8080
          protocol: "TCP"
        resources:
          limits:
            memory: 'repl{{ ConfigOption "gateway_pod_memory" }}Mi'
            cpu: 'repl{{ ConfigOption "gateway_cpu" }}'
          requests:
            memory: 'repl{{ ConfigOption "gateway_pod_memory" }}Mi'
            cpu: 'repl{{ ConfigOption "gateway_cpu" }}'
        envFrom:
        - configMapRef:
            name: harness-gateway
        - secretRef:
            name: harness-gateway          