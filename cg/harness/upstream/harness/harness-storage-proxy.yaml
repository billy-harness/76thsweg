apiVersion: v1
kind: ConfigMap
metadata:
  name: delegate-proxy
data:
  proxy.conf: "server { root /www/data;proxy_http_version 1.1;\n}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delegate-proxy
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "storage_labels" | nindent 4 }}
  annotations:  
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "storage_deployment_annotations" | nindent 4 }}       
spec:
  selector:
    matchLabels:
      app: delegate-proxy
  template:
    metadata:
      labels:
        app: delegate-proxy
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "storage_labels" | nindent 8 }}
      annotations:  
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "storage_podspec_annotations" | nindent 8 }}     
    spec:
      serviceAccountName: harness-default
      securityContext:
        runAsUser: 101
      containers:
        - image: harness/delegate-proxy-signed:74410
          imagePullPolicy: IfNotPresent
          name: delegate-proxy
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 200m
              memory: 100Mi
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: harness-nginx-conf
      volumes:
        - name: harness-nginx-conf
          configMap:
            name: delegate-proxy
            items:
              - key: proxy.conf
                path: proxy.conf
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: delegate-proxy
  annotations:
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: delegate-proxy
              servicePort: 80
            path: /storage
# repl{{ if ConfigOptionEquals "scheme" "https"}}
      host: '{{repl ConfigOption "host_name" }}'
  tls:
    - hosts:
      - '{{repl ConfigOption "host_name" }}'
      secretName: harness-cert  
# repl{{ end }} 
---
apiVersion: v1
kind: Service
metadata:
  name: delegate-proxy
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "service_labels" | nindent 4 }} 
spec:
  selector:
    app: delegate-proxy
  ports:
    - port: 80
      targetPort: 8080
