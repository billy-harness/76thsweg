apiVersion: v1
data:
  ACCESS_CONTROL_PREFERENCE_ENABLED: "true"
  ACCESS_CONTROL_SERVICE_BASE_URL: http://harness-url/authz/api/
  ACCOUNT_CLIENT_BASE_URL: http://harness-url/api/
  AGGREGATOR_ENABLED: "true"
  AUDIT_CLIENT_BASE_URL: http://harness-url/audit/api/
  DEPLOY_MODE: KUBERNETES_ONPREM
  DISTRIBUTED_LOCK_IMPLEMENTATION: redis
  ENABLE_ACCESS_CONTROL: "false"
  ENABLE_AUDIT: "true"
  ENABLE_AUTH: "true"
  EVENTS_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_CONFIG_USE_SENTINEL: "true"
  FEATURE_FLAG_CLIENT_BASE_URL: http://harness-url/api/
  GOOGLE_APPLICATION_CREDENTIALS: /opt/harness/monitoring/stackdriver.json
  LOCK_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  LOCK_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  LOCK_CONFIG_USE_SENTINEL: "true"
  LOGGING_LEVEL: INFO
  MONGODB_HOSTS: mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc:27017,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc:27017,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017
  MONGODB_SSL_ENABLED: "false"
  MONGODB_USER: admin
  NOTIFICATION_ENVIRONMENT: ONPREM
  NOTIFICATION_SLACK_WEBHOOK_URL: ""
  OFFSET_FLUSH_INTERVAL_MS: "10000"
  ORGANIZATION_CLIENT_BASE_URL: http://harness-url/ng/api/
  PROJECT_CLIENT_BASE_URL: http://harness-url/ng/api/
  RESOURCE_GROUP_CLIENT_BASE_URL: http://harness-url/resourcegroup/api/
  RESOURCE_GROUP_ITERATOR_ENABLED: "true"
  RESOURCE_GROUP_ITERATOR_INTERVAL: "3600"
  SCOPE_ITERATOR_ENABLED: "true"
  SCOPE_ITERATOR_INTERVAL: "3600"
  SERVICEACCOUNT_CLIENT_BASE_URL: http://harness-url/ng/api/
  SERVICEACCOUNT_ITERATOR_ENABLED: "true"
  SERVICEACCOUNT_ITERATOR_INTERVAL: "3600"
  SUPPORTPREFERENCE_ITERATOR_ENABLED: "true"
  SUPPORTPREFERENCE_ITERATOR_INTERVAL: "600"
  USER_CLIENT_BASE_URL: http://harness-url/ng/api/
  USER_GROUP_CLIENT_BASE_URL: http://harness-url/ng/api/
  USER_GROUP_ITERATOR_ENABLED: "true"
  USER_GROUP_ITERATOR_INTERVAL: "3600"
  USER_ITERATOR_ENABLED: "true"
  USER_ITERATOR_INTERVAL: "3600"
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: access-control
---
apiVersion: v1
data:
  DEPLOY_MODE: KUBERNETES
  MEMORY: "2048"
  MONGO_TAG_NAME: none
  MONGO_TAG_VALUE: none
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: change-data-capture
---
apiVersion: v1
data:
  ADDON_IMAGE: harness/ci-addon:release-97
  API_URL: http://harness-url/ng/#/
  ARTIFACTORY_UPLOAD_IMAGE: plugins/artifactory:1.0.4
  CACHE_BACKEND: REDIS
  CACHE_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  CACHE_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  CACHE_CONFIG_USE_SENTINEL: "true"
  DEPLOY_MODE: KUBERNETES_ONPREM
  DOCKER_PUSH_IMAGE: plugins/kaniko:1.3.1
  ECR_PUSH_IMAGE: plugins/kaniko-ecr:1.3.1
  ENABLE_DASHBOARD_TIMESCALE: "true"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_REDIS_URL: redis://localhost:6379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  GCR_PUSH_IMAGE: plugins/kaniko-gcr:1.3.1
  GCS_CACHE_IMAGE: plugins/cache:1.3.5
  GCS_UPLOAD_IMAGE: plugins/gcs:1.2.4
  GIT_CLONE_IMAGE: harness/drone-git:1.0.6-rootless-linux-amd64
  GRPC_SERVER_PORT: "9979"
  LE_IMAGE: harness/ci-lite-engine:release-34
  LOG_SERVICE_ENDPOINT: http://harness-url/log-service/
  LOGGING_LEVEL: INFO
  MANAGER_AUTHORITY: default-authority.harness.io
  MANAGER_TARGET: harness-manager:9879
  MANAGER_URL: http://harness-url/api/
  MEMORY: "2096"
  NG_MANAGER_URL: http://harness-url/ng/api/
  PMS_AUTHORITY: default-authority.harness.io
  PMS_TARGET: pipeline-service:12011
  S3_CACHE_IMAGE: plugins/cache:1.3.5
  S3_UPLOAD_IMAGE: plugins/s3:1.0.3
  SCM_SERVICE_URI: scm:8091
  SHOULD_CONFIGURE_WITH_PMS: "true"
  TI_SERVICE_ENDPOINT: http://harness-url/ti-service/
  USE_REDIS_FOR_SDK_RESPONSE_EVENTS: "true"
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ci-manager
---
apiVersion: v1
data:
  ACCESS_CONTROL_BASE_URL: http://harness-url/authz/api/
  ACCESS_CONTROL_ENABLED: "true"
  CACHE_BACKEND: REDIS
  CACHE_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  CACHE_CONFIG_REDIS_URL: redis://localhost:6379
  CACHE_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  CACHE_CONFIG_USE_SENTINEL: "true"
  DEPLOY_MODE: KUBERNETES_ONPREM
  EEVENTS_FRAMEWORK_REDIS_URL: redis://localhost:6379
  ENV: KUBERNETES_ONPREM
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  GRPC_SERVER_PORT: "9979"
  LOGGING_LEVEL: INFO
  MANAGER_CLIENT_BASEURL: http://harness-url/
  MANAGER_URL: http://harness-url/api/
  MEMORY: "2048"
  MOCK_ACCESS_CONTROL_SERVICE: "false"
  NG_MANAGER_URL: http://harness-url/ng/api/
  NOTIFICATION_BASE_URL: http://harness-url/notifications/api/
  PMS_AUTHORITY: default-authority.harness.io
  PMS_TARGET: pipeline-service:12011
  PORTAL_URL: http://harness-url/api/
  SHOULD_CONFIGURE_WITH_PMS: "true"
  STACK_DRIVER_LOGGING_ENABLED: "false"
  VERIFICATION_PORT: "6060"
  VERIFICATION_SERVICE_SECRET: 59MR5RlVARcdH7zb7pNx6GzqiglBmXR8
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: cv-nextgen
---
apiVersion: v1
data:
  https_port: "10800"
  learning_env: on_prem
  server_url: http://cv-nextgen:6060
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: le-nextgen
---
apiVersion: v1
data:
  LOG_SERVICE_DISABLE_AUTH: "true"
  LOG_SERVICE_S3_BUCKET: logs
  LOG_SERVICE_S3_ENDPOINT: http://harness-url:9000
  LOG_SERVICE_S3_PATH_STYLE: "true"
  LOG_SERVICE_S3_REGION: us-east-1
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service
---
apiVersion: v1
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --config-dir ${MC_CONFIG_DIR}"

    # connectToMinio
    # Use a check-sleep-check loop to wait for Minio service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }

    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }

    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3

      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi

      # Create the bucket if it does not exist
      if ! checkBucketExists $BUCKET ; then
        echo "Creating bucket '$BUCKET'"
        ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."
      fi

      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} policy set $POLICY myminio/$BUCKET
    }

    # Try connecting to Minio instance
    scheme=http
    connectToMinio $scheme
    # Create the buckets
    createBucket logs none false
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    app: log-service-minio
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service-minio
---
apiVersion: v1
data:
  API_URL: http://harness-url/gateway
  HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER: "true"
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: next-gen-ui
---
apiVersion: v1
data:
  ACCESS_CONTROL_BASE_URL: http://harness-url/authz/api/
  ACCESS_CONTROL_ENABLED: "true"
  AUDIT_CLIENT_BASEURL: http://harness-url/audit/api/
  AUDIT_ENABLED: "true"
  CACHE_BACKEND: REDIS
  CURRENT_GEN_UI_URL: http://harness-url/#/
  DEPLOY_MODE: KUBERNETES_ONPREM
  ENABLE_DASHBOARD_TIMESCALE: "true"
  ENABLE_DEFAULT_RESOURCE_GROUP_CREATION: "true"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_REDIS_URL: redis://localhost:6379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  GRPC_SERVER_PORT: "9979"
  LOCK_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  LOCK_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  LOCK_CONFIG_USE_SENTINEL: "true"
  LOG_STREAMING_SERVICE_BASEURL: http://harness-url/log-service/
  LOG_STREAMING_SERVICE_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  LOGGING_LEVEL: INFO
  MANAGER_AUTHORITY: default-authority.harness.io
  MANAGER_CLIENT_BASEURL: http://harness-url/api/
  MANAGER_TARGET: harness-manager:9879
  MANAGER_UI_URL: http://harness-url
  MEMORY: 4096m
  MOCK_ACCESS_CONTROL_SERVICE: "false"
  NG_MANAGER_API_URL: http://harness-url/ng/api/
  NG_MANAGER_AUTHORITY: default-authority.harness.io
  NG_MANAGER_CLIENT_BASEURL: http://harness-url/ng/api/
  NG_MANAGER_TARGET: ng-manager:13002
  NG_MANAGER_UI_URL: http://harness-url/ng/#/
  PMS_AUTHORITY: default-authority.harness.io
  PMS_GITSYNC_AUTHORITY: default-authority.harness.io
  PMS_GITSYNC_TARGET: pipeline-service:14002
  PMS_TARGET: pipeline-service:12011
  RESOURCE_GROUP_BASE_URL: http://harness-url/resourcegroup/api/
  SCM_SERVICE_URI: scm:8091
  SHOULD_CONFIGURE_WITH_PMS: "true"
  TEMPLATE_GITSYNC_AUTHORITY: default-authority.harness.io
  TEMPLATE_GITSYNC_TARGET: template-service:16002
  USE_REDIS_FOR_SDK_RESPONSE_EVENTS: "true"
  WEBHOOK_BASE_URL: http://harness-url
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ng-manager
---
apiVersion: v1
data:
  ACCESS_CONTROL_BASE_URL: http://harness-url/authz/api/
  ACCESS_CONTROL_ENABLED: "true"
  AUTH_ENABLED: "true"
  CACHE_BACKEND: REDIS
  CACHE_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  CACHE_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  CACHE_CONFIG_USE_SENTINEL: "true"
  CI_MANAGER_AUTHORITY: default-authority.harness.io
  CI_MANAGER_BASE_URL: http://harness-url/ci/
  CI_MANAGER_TARGET: ci-manager:9979
  CUSTOM_TRIGGER_BASEURL: http://harness-url/pipeline/api/
  CV_MANAGER_BASE_URL: http://harness-url/cv/api/
  CVNG_MANAGER_AUTHORITY: default-authority.harness.io
  CVNG_MANAGER_TARGET: cv-nextgen:9979
  DEPLOY_MODE: KUBERNETES_ONPREM
  ENABLE_DASHBOARD_TIMESCALE: "true"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_REDIS_URL: redis://localhost:6379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  GRPC_SERVER_PORT: "12011"
  LOG_STREAMING_SERVICE_BASEURL: http://harness-url/log-service/
  LOGGING_LEVEL: INFO
  MANAGER_AUTHORITY: default-authority.harness.io
  MANAGER_BASE_URL: http://harness-url/api/
  MANAGER_CLIENT_BASEURL: http://harness-url/api/
  MANAGER_TARGET: harness-manager:9879
  MEMORY: 4096m
  MOCK_ACCESS_CONTROL_SERVICE: "false"
  NG_MANAGER_AUTHORITY: default-authority.harness.io
  NG_MANAGER_BASE_URL: http://harness-url/ng/api/
  NG_MANAGER_GITSYNC_AUTHORITY: default-authority.harness.io
  NG_MANAGER_GITSYNC_TARGET: ng-manager:13002
  NG_MANAGER_TARGET: ng-manager:9979
  NOTIFICATION_BASE_URL: http://harness-url/notifications/api/
  PIPELINE_SERVICE_BASE_URL: http://harness-url/ng/#
  PMS_API_BASE_URL: http://harness-url/pipeline/api/
  SCM_SERVICE_URI: scm:8091
  SHOULD_USE_INSTANCE_CACHE: "false"
  TEMPLATE_SERVICE_ENDPOINT: http://harness-url/template/api/
  USE_REDIS_FOR_INTERRUPTS: "true"
  USE_REDIS_FOR_ORCHESTRATION_EVENTS: "true"
  USE_REDIS_FOR_SDK_RESPONSE_EVENTS: "true"
  WEBHOOK_TRIGGER_BASEURL: http://harness-url/ng/api/
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: pipeline-service
---
apiVersion: v1
data:
  ACCESS_CONTROL_BASE_URL: http://harness-url/authz/api/
  ACCESS_CONTROL_ENABLED: "true"
  AUDIT_CLIENT_BASEURL: http://harness-url/audit/api/
  AUDIT_ENABLED: "true"
  DEPLOY_MODE: KUBERNETES_ONPREM
  DISTRIBUTED_LOCK_IMPLEMENTATION: REDIS
  ENABLE_AUDIT_SERVICE: "true"
  ENABLE_RESOURCE_GROUP: "true"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  GRPC_MANAGER_AUTHORITY: default-authority.harness.io
  GRPC_MANAGER_TARGET: harness-manager:9879
  LOCK_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  LOCK_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  LOCK_CONFIG_USE_SENTINEL: "true"
  LOGGING_LEVEL: INFO
  MANAGER_CLIENT_BASEURL: http://harness-url/api/
  MOCK_ACCESS_CONTROL_SERVICE: "false"
  NG_MANAGER_CLIENT_BASEURL: http://harness-url/ng/api/
  PIPELINE_SERVICE_CLIENT_BASEURL: http://harness-url/pipeline/api/
  RBAC_URL: http://harness-url/ng/api/
  RESOURCE_GROUP_CLIENT_BASE_URL: http://harness-url/resourcegroup/api/
  SMTP_HOST: ""
  SMTP_PASSWORD: ""
  SMTP_PORT: "465"
  SMTP_USE_SSL: "true"
  SMTP_USERNAME: ""
  TEMPLATE_SERVICE_BASE_URL: http://harness-url/templates/api/
  TEMPLATE_SERVICE_CLIENT_BASEURL: http://harness-url/template/api/
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: platform-service
---
apiVersion: v1
data:
  ACCESS_CONTROL_BASE_URL: http://harness-url/authz/api/
  ACCESS_CONTROL_ENABLED: "true"
  AUDIT_SERVICE_BASE_URL: http://harness-url/audit/api/
  CACHE_BACKEND: REDIS
  CACHE_CONFIG_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  CACHE_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  CACHE_CONFIG_USE_SENTINEL: "true"
  DEPLOY_MODE: KUBERNETES_ONPREM
  ENABLE_AUDIT: "true"
  ENABLE_AUTH: "true"
  ENABLE_GIT_SYNC: "true"
  ENFORCEMENT_CHECK_ENABLED: "false"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_REDIS_URL: redis://localhost:6379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  LOGGING_LEVEL: INFO
  MANAGER_AUTHORITY: default-authority.harness.io
  MANAGER_TARGET: harness-manager:9879
  MEMORY: 1024m
  NG_MANAGER_BASE_URL: http://harness-url/ng/api/
  NG_MANAGER_GITSYNC_AUTHORITY: default-authority.harness.io
  NG_MANAGER_GITSYNC_TARGET: ng-manager:13002
  PMS_GRPC_AUTHORITY: default-authority.harness.io
  PMS_GRPC_TARGET: pipeline-service:12011
  SCM_SERVICE_URI: scm:8091
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: template-service
---
apiVersion: v1
data:
  EVENTS_FRAMEWORK_REDIS_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_REDIS_SENTINEL_URLS: redis-sentinel-harness-announce-0.harness:26379,redis://redis-sentinel-harness-announce-1.harness:26379,redis://redis-sentinel-harness-announce-2.harness:26379
  EVENTS_FRAMEWORK_REDIS_URL: default
  EVENTS_FRAMEWORK_REDIS_USE_SENTINEL: "true"
  TI_SERVICE_COVERAGE_HYPER_TABLE: coverage
  TI_SERVICE_DB_NAME: harnessti
  TI_SERVICE_DISABLE_AUTH: "true"
  TI_SERVICE_HYPER_TABLE: evaluation
  TI_SERVICE_MONGODB_DB_NAME: ti-harness
  TI_SERVICE_SELECTION_HYPER_TABLE: selection
  TI_SERVICE_TIMESCALE_HOST: timescaledb-single-chart.harness
  TI_SERVICE_TIMESCALE_PORT: "5432"
  TI_SERVICE_TIMESCALE_SSL_MODE: require
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ti-service
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJwcm94eS5yZXBsaWNhdGVkLmNvbSI6eyJhdXRoIjoiTVhoaGRFbDVSVzlRYWtaalpYbzBha2wzYldaa1VtUTRlbXBXT2pGNFlYUkplVVZ2VUdwR1kyVjZOR3BKZDIxbVpGSmtPSHBxVmc9PSJ9LCJyZWdpc3RyeS5yZXBsaWNhdGVkLmNvbSI6eyJhdXRoIjoiTVhoaGRFbDVSVzlRYWtaalpYbzBha2wzYldaa1VtUTRlbXBXT2pGNFlYUkplVVZ2VUdwR1kyVjZOR3BKZDIxbVpGSmtPSHBxVmc9PSJ9fX0=
kind: Secret
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-9999"
    kots.io/app-slug: harness-ng
  creationTimestamp: null
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: harness-ng-registry
  namespace: harness
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJwcm94eS5yZXBsaWNhdGVkLmNvbSI6eyJhdXRoIjoiTVhoaGRFbDVSVzlRYWtaalpYbzBha2wzYldaa1VtUTRlbXBXT2pGNFlYUkplVVZ2VUdwR1kyVjZOR3BKZDIxbVpGSmtPSHBxVmc9PSJ9LCJyZWdpc3RyeS5yZXBsaWNhdGVkLmNvbSI6eyJhdXRoIjoiTVhoaGRFbDVSVzlRYWtaalpYbzBha2wzYldaa1VtUTRlbXBXT2pGNFlYUkplVVZ2VUdwR1kyVjZOR3BKZDIxbVpGSmtPSHBxVmc9PSJ9fX0=
kind: Secret
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-9999"
    kots.io/app-slug: harness-ng
  creationTimestamp: null
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: kotsadm-replicated-registry
  namespace: harness
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: access-control
stringData:
  IDENTITY_SERVICE_SECRET: HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU=
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/accesscontrol?replicaSet=rs0&authSource=admin
  MONGODB_PASSWORD: CA8FMywpbM
  OFFSET_STORAGE_FILE_FILENAME: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/accesscontrol?replicaSet=rs0&authSource=admin
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: change-data-capture
stringData:
  CDC_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/change-data-capture?replicaSet=rs0&authSource=admin
  EVENTS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/events?replicaSet=rs0&authSource=admin
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/harness?replicaSet=rs0&authSource=admin
  NG_HARNESS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/ng-harness?replicaSet=rs0&authSource=admin
  PMS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/pms-harness?replicaSet=rs0&authSource=admin
  TIMESCALEDB_PASSWORD: kXsMSRiREYXiMciUwMdj
  TIMESCALEDB_URI: jdbc:postgresql://timescaledb-single-chart.harness:5432/harness
  TIMESCALEDB_USERNAME: postgres
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ci-manager
stringData:
  CIMANAGER_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/harness-ci?replicaSet=rs0&authSource=admin
  LOG_SERVICE_GLOBAL_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/harness?replicaSet=rs0&authSource=admin
  PMS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/pms-harness?replicaSet=rs0&authSource=admin
  TI_SERVICE_GLOBAL_TOKEN: 78d16b66-4b4c-11eb-8377-acde48001122
  TIMESCALE_PASSWORD: kXsMSRiREYXiMciUwMdj
  TIMESCALE_URI: jdbc:postgresql://timescaledb-single-chart.harness:5432/harness
  TIMESCALEDB_USERNAME: postgres
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: cv-nextgen
stringData:
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/cvng-harness?replicaSet=rs0&authSource=admin
  NOTIFICATION_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/notifications?replicaSet=rs0&authSource=admin
  PMS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/pms-harness?replicaSet=rs0&authSource=admin
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: le-nextgen
stringData:
  service_secret: 59MR5RlVARcdH7zb7pNx6GzqiglBmXR8
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service
stringData:
  LOG_SERVICE_GLOBAL_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  LOG_SERVICE_S3_ACCESS_KEY_ID: minio
  LOG_SERVICE_S3_SECRET_ACCESS_KEY: minio123
  LOG_SERVICE_SECRET: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service-minio
stringData:
  accesskey: minio
  secretkey: minio123
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ng-manager
stringData:
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/ng-harness?replicaSet=rs0&authSource=admin
  NOTIFICATION_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/notifications?replicaSet=rs0&authSource=admin
  PMS_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/pms-harness?replicaSet=rs0&authSource=admin
  TIMESCALE_PASSWORD: kXsMSRiREYXiMciUwMdj
  TIMESCALE_URI: jdbc:postgresql://timescaledb-single-chart.harness:5432/harness
  TIMESCALEDB_USERNAME: postgres
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: pipeline-service
stringData:
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/pms-harness?replicaSet=rs0&authSource=admin
  NOTIFICATION_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/notifications?replicaSet=rs0&authSource=admin
  TIMESCALE_PASSWORD: kXsMSRiREYXiMciUwMdj
  TIMESCALE_URI: jdbc:postgresql://timescaledb-single-chart.harness:5432/harness
  TIMESCALEDB_USERNAME: postgres
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: platform-service
stringData:
  AUDIT_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/audits?replicaSet=rs0&authSource=admin
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/notifications?replicaSet=rs0&authSource=admin
  RESOURCE_GROUP_MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/resource-groups?replicaSet=rs0&authSource=admin
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: template-service
stringData:
  MONGO_URI: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/template-harness?replicaSet=rs0&authSource=admin
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ti-service
stringData:
  TI_SERVICE_GLOBAL_TOKEN: 78d16b66-4b4c-11eb-8377-acde48001122
  TI_SERVICE_MONGODB_CONN_STR: mongodb://admin:CA8FMywpbM@mongodb-replicaset-chart-0.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-1.mongodb-replicaset-chart.harness.svc,mongodb-replicaset-chart-2.mongodb-replicaset-chart.harness.svc:27017/ti-harness?replicaSet=rs0&authSource=admin
  TI_SERVICE_TIMESCALE_PASSWORD: kXsMSRiREYXiMciUwMdj
  TI_SERVICE_TIMESCALE_USERNAME: postgres
  TSDB_URL: postgres://postgres:kXsMSRiREYXiMciUwMdj@timescaledb-single-chart.harness:5432
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: access-control
spec:
  ports:
  - name: http
    port: 9006
    protocol: TCP
    targetPort: 9006
  selector:
    app: access-control
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ci-manager
spec:
  ports:
  - name: ci-manager
    port: 7090
    protocol: TCP
    targetPort: 7090
  - name: ci-manager-grpc
    port: 9979
    protocol: TCP
    targetPort: 9979
  selector:
    app: ci-manager
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: cv-nextgen
spec:
  ports:
  - name: cv
    port: 6060
    protocol: TCP
    targetPort: cv
  - name: cv-nextgen-grpc
    port: 9979
    protocol: TCP
    targetPort: 9979
  selector:
    app: cv-nextgen
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: log-service
spec:
  ports:
  - name: log-service
    port: 8079
    protocol: TCP
    targetPort: 8079
  selector:
    app: log-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    app: log-service-minio
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: log-service-minio
spec:
  ports:
  - name: http
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: log-service-minio
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: next-gen-ui
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: next-gen-ui
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ng-manager
spec:
  ports:
  - name: http-ng-manager
    port: 7090
    protocol: TCP
    targetPort: 7090
  - name: ng-manager-grpc
    port: 9979
    protocol: TCP
    targetPort: 9979
  - name: git-sync-grpc
    port: 13002
    protocol: TCP
    targetPort: 13002
  selector:
    app: ng-manager
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: pipeline-service
spec:
  ports:
  - name: pms-grpc
    port: 12011
    protocol: TCP
    targetPort: 12011
  - name: pms-http
    port: 12001
    protocol: TCP
    targetPort: 12001
  - name: gitsync-grpc
    port: 14002
    protocol: TCP
    targetPort: 14002
  selector:
    app: pipeline-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: platform-service
spec:
  ports:
  - name: http
    port: 9005
    protocol: TCP
    targetPort: 9005
  selector:
    app: platform-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: scm
spec:
  ports:
  - name: scm
    port: 8091
    protocol: TCP
    targetPort: 8091
  selector:
    app: scm
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: template-service
spec:
  ports:
  - name: template-grpc
    port: 15011
    protocol: TCP
    targetPort: 15011
  - name: template-http
    port: 15001
    protocol: TCP
    targetPort: 15001
  - name: gitsync-grpc
    port: 16002
    protocol: TCP
    targetPort: 16002
  selector:
    app: template-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ti-service
spec:
  ports:
  - name: ti-service
    port: 8078
    protocol: TCP
    targetPort: 8078
  selector:
    app: ti-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: access-control
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: access-control
spec:
  progressDeadlineSeconds: 720
  replicas: 1
  selector:
    matchLabels:
      app: access-control
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: access-control
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: access-control
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: access-control
        - secretRef:
            name: access-control
        image: harness/accesscontrol-service-signed:74400
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 40
          httpGet:
            path: /api/health
            port: 9006
          initialDelaySeconds: 200
          periodSeconds: 10
          timeoutSeconds: 20
        name: access-control
        ports:
        - containerPort: 9006
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 40
          httpGet:
            path: /api/health
            port: 9006
          initialDelaySeconds: 200
          periodSeconds: 10
          timeoutSeconds: 20
        resources:
          limits:
            cpu: "1"
            memory: 3072Mi
          requests:
            cpu: "1"
            memory: 3072Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: change-data-capture
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: change-data-capture
spec:
  replicas: 1
  selector:
    matchLabels:
      app: change-data-capture
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: change-data-capture
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: change-data-capture
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: change-data-capture
        - secretRef:
            name: change-data-capture
        image: proxy.replicated.com/proxy/harness-ng/harness/cdcdata-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /health
            port: 8190
          initialDelaySeconds: 400
          periodSeconds: 10
          timeoutSeconds: 10
        name: change-data-capture
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /health
            port: 8190
          initialDelaySeconds: 300
          periodSeconds: 10
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 2880Mi
          requests:
            cpu: "1"
            memory: 2880Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: ci-manager
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ci-manager
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: ci-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: ci-manager
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: ci-manager
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: ci-manager
        - secretRef:
            name: ci-manager
        image: proxy.replicated.com/proxy/harness-ng/harness/ci-manager-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 20
          httpGet:
            path: /health
            port: http-ci-manager
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
        name: ci-manager
        ports:
        - containerPort: 7090
          name: http-ci-manager
          protocol: TCP
        - containerPort: 9979
          name: ci-manager-grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 8
          httpGet:
            path: /health
            port: http-ci-manager
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 3072Mi
          requests:
            cpu: "1"
            memory: 3072Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: cv-nextgen
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: cv-nextgen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cv-nextgen
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: cv-nextgen
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: cv-nextgen
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: cv-nextgen
        - secretRef:
            name: cv-nextgen
        image: proxy.replicated.com/proxy/harness-ng/harness/cv-nextgen:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /cv/api/health
            port: cv
          initialDelaySeconds: 300
          periodSeconds: 10
        name: cv-nextgen
        ports:
        - containerPort: 6060
          name: cv
          protocol: TCP
        - containerPort: 9979
          name: cv-ng-grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /cv/api/health
            port: cv
          initialDelaySeconds: 60
          periodSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 3000Mi
          requests:
            cpu: "1"
            memory: 3000Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: le-nextgen
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: le-nextgen
spec:
  replicas: null
  selector:
    matchLabels:
      app: le-nextgen
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: le-nextgen
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: le-nextgen
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: le-nextgen
        - secretRef:
            name: le-nextgen
        image: proxy.replicated.com/proxy/harness-ng/harness/le-nextgen-signed:66300
        imagePullPolicy: IfNotPresent
        name: le-nextgen
        ports:
        - containerPort: 8108
          name: learning
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: 6132Mi
          requests:
            cpu: "4"
            memory: 6132Mi
        securityContext:
          runAsNonRoot: true
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: log-service
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: log-service
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: log-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: log-service
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: log-service
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: log-service
        - secretRef:
            name: log-service
        image: harness/log-service-signed:release-18
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-log-svc
          initialDelaySeconds: 10
          periodSeconds: 10
        name: log-service
        ports:
        - containerPort: 8079
          name: http-log-svc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-log-svc
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 3072Mi
          requests:
            cpu: "1"
            memory: 3072Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: log-service-minio
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: log-service-minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-service-minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: log-service-minio
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
      name: log-service-minio
    spec:
      containers:
      - command:
        - /bin/sh
        - -ce
        - /usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /data
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: log-service-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: log-service-minio
        image: minio/minio:RELEASE.2022-01-08T03-11-54Z
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/live
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: log-service-minio
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /minio/health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: "1"
            memory: 4Gi
        volumeMounts:
        - mountPath: /data
          name: data
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: minio-user
        secret:
          defaultMode: 420
          secretName: log-service-minio
      - name: data
        persistentVolumeClaim:
          claimName: log-service-minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: next-gen-ui
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: next-gen-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: next-gen-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: next-gen-ui
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: next-gen-ui
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: next-gen-ui
        image: harness/nextgenui-signed:0.292.8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /health
            port: ng-ui-port
          initialDelaySeconds: 100
          periodSeconds: 20
        name: next-gen-ui
        ports:
        - containerPort: 8080
          name: ng-ui-port
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: ng-ui-port
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          limits:
            cpu: "0.5"
            memory: 512Mi
          requests:
            cpu: "0.5"
            memory: 512Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: ng-manager
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ng-manager
spec:
  progressDeadlineSeconds: 800
  replicas: 1
  selector:
    matchLabels:
      app: ng-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: ng-manager
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: ng-manager
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: ng-manager
        - secretRef:
            name: ng-manager
        image: harness/ng-manager-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /health
            port: 7090
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 10
        name: ng-manager
        ports:
        - containerPort: 7090
          name: http-ng-manager
          protocol: TCP
        - containerPort: 9979
          name: ng-manager-grpc
          protocol: TCP
        - containerPort: 13002
          name: git-sync-grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /health
            port: 7090
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "2"
            memory: 6144Mi
          requests:
            cpu: "2"
            memory: 6144Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: pipeline-service
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: pipeline-service
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: pipeline-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: pipeline-service
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: pipeline-service
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: pipeline-service
        - secretRef:
            name: pipeline-service
        image: harness/pipeline-service-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 20
          httpGet:
            path: /api/health
            port: 12001
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
        name: pipeline-service
        ports:
        - containerPort: 12011
          name: pms-grpc
          protocol: TCP
        - containerPort: 12001
          name: pms-http
          protocol: TCP
        - containerPort: 14002
          name: gitsync-grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 8
          httpGet:
            path: /api/health
            port: 12001
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 6144Mi
          requests:
            cpu: "1"
            memory: 6144Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: platform-service
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: platform-service
spec:
  progressDeadlineSeconds: 550
  replicas: 1
  selector:
    matchLabels:
      app: platform-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: platform-service
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: platform-service
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: platform-service
        - secretRef:
            name: platform-service
        image: harness/platform-service-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 20
          httpGet:
            path: /api/health
            port: 9005
          initialDelaySeconds: 300
          periodSeconds: 10
          timeoutSeconds: 10
        name: platform-service
        ports:
        - containerPort: 9005
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /api/health
            port: 9005
          initialDelaySeconds: 100
          periodSeconds: 10
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 3072Mi
          requests:
            cpu: "1"
            memory: 3072Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: scm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scm
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
        license-features-hash: 2b13e7fd2f0cb1370280febc2447dee41f1c78d6fcadb49e595fed0b22ac1f94
      labels:
        app: scm
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: scm
            topologyKey: kubernetes.io/hostname
      containers:
      - image: harness/ci-scm-signed:release-45
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -addr=:8091
          initialDelaySeconds: 10
        name: scm
        ports:
        - containerPort: 8091
          name: scm
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -addr=:8091
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: "0.1"
            memory: 512Mi
          requests:
            cpu: "0.1"
            memory: 512Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      serviceAccountName: harness-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: template-service
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: template-service
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: template-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: template-service
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: template-service
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - configMapRef:
            name: template-service
        - secretRef:
            name: template-service
        image: proxy.replicated.com/proxy/harness-ng/harness/template-service-signed:74410
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 20
          httpGet:
            path: /api/health
            port: 15001
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
        name: template-service
        ports:
        - containerPort: 15011
          name: template-grpc
          protocol: TCP
        - containerPort: 15001
          name: template-http
          protocol: TCP
        - containerPort: 16002
          name: gitsync-grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 8
          httpGet:
            path: /api/health
            port: 15001
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "0.5"
            memory: 1400Mi
          requests:
            cpu: "0.5"
            memory: 1400Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
  labels:
    app: ti-service
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
    kots.io/placeholder: "true"
  name: ti-service
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: ti-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
        kots.io/placeholder: "true"
      labels:
        app: ti-service
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
        kots.io/placeholder: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: ti-service
            topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - secretRef:
            name: ti-service
        - configMapRef:
            name: ti-service
        image: proxy.replicated.com/proxy/harness-ng/harness/ti-service-signed:release-46
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-ti-service
          initialDelaySeconds: 10
          periodSeconds: 10
        name: ti-service
        ports:
        - containerPort: 8078
          name: http-ti-service
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-ti-service
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 3072Mi
          requests:
            cpu: "1"
            memory: 3072Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
      imagePullSecrets:
      - name: harness-ng-registry
      serviceAccountName: harness-default
      terminationGracePeriodSeconds: 30
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/hook-delete-policy: hook-succeeded, hook-failed
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ti-migration-release-46
spec:
  template:
    metadata:
      annotations:
        kots.io/app-slug: harness-ng
      labels:
        kots.io/app-slug: harness-ng
        kots.io/backup: velero
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - /opt/harness/migrate.sh
        envFrom:
        - secretRef:
            name: ti-service
        image: proxy.replicated.com/proxy/harness-ng/harness/ti-service-signed:release-46
        imagePullPolicy: IfNotPresent
        name: migrate
        resources:
          limits:
            cpu: 1
            memory: 3024Mi
          requests:
            cpu: 1
            memory: 3024Mi
      imagePullSecrets:
      - name: harness-ng-registry
      restartPolicy: Never
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: access-control
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: access-control
          servicePort: 9006
        path: /authz(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: audit-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: platform-service
          servicePort: 9005
        path: /audit(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ci-manager
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: ci-manager
          servicePort: 7090
        path: /ci(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /cv/api/$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: cv-nextgen
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: cv-nextgen
          servicePort: 6060
        path: /cv/api(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: log-service
          servicePort: 8079
        path: /log-service(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service-minio
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: log-service-minio
          servicePort: 9000
        path: /minio
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: next-gen-ui
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: next-gen-ui
          servicePort: 80
        path: /ng(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ng-manager
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: ng-manager
          servicePort: 7090
        path: /ng/api(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: notification-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: platform-service
          servicePort: 9005
        path: /notifications(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: pipeline-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: pipeline-service
          servicePort: 12001
        path: /pipeline(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: resourcegroup-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: platform-service
          servicePort: 9005
        path: /resourcegroup(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: template-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: template-service
          servicePort: 15001
        path: /template(/|$)(.*)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kots.io/app-slug: harness-ng
    kots.io/placeholder: "true"
    kubernetes.io/ingress.class: harness
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: ti-service
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: ti-service
          servicePort: 8078
        path: /ti-service(/|$)(.*)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    kots.io/app-slug: harness-ng
  labels:
    kots.io/app-slug: harness-ng
    kots.io/backup: velero
  name: log-service-minio
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: standard
